/*10/12/24 LÍNEA DE COMANDOS
Argumentos por ´línea de comandos: int main(int argc, char ** argv)
printf("Lista de Argumentos: \n");
for(int i = 0; i<argc; i++){
    printf("\t Argumento %d: %s\n",i, argv[i])//}

if (argv==1){
    //Lo que hacia antes aka, mostrar mi menú. Si simplemente en el ejecutable lo dejamos al cual ./practica6 ,  pues se queda tal cual
}
if(argv[1] == "mostrar"){
    //Lamar a mostrar todo. Si en el ejecutable escribimos mostrar, pues nos muestra todo
}
if(argv[1] == "mostrar" && existe argv[2]){
    //Llamar a mostrar la id de argv[2] si en el ejecutable decimos ./practica6 + id, pues nos muestra la id.
}
RESUMEN: si ponemos ./practica6.out mostrar 15
    argc: numero de argumento
    argv[0] -> nombre del programa      argv{"./practica6.out" "mostrar" "15"}
    argv[1] -> "mostrar"
    argv[2] -> "15"
*/
/*
if (argc == 1){
    //solo hay una argumento que es el a.out y se hace el programa de siempre
}

else if(argc == 2){ //SOLO EN EL CASO DE QUE HAYAMOS INTRODUCIDO DOS ARGUMENTOS
    //Hay que distinguir entre mostrar y añadir, como? comparando. Compara mi argumento de turno con la palabra mostrar o la palabra añadir
    if(strcmp(argv[1] == 'mostrar')==0){
        //Llamo a la funcion de mostrar todos los libros
    }
}   else if (strcmp(argv[1] == 'añadir')==0){
    nos permite añadir libros
}

else if (argc == 3){
    //En este caso con TRES argumentos, podemos tener el caso de mostrar el ID, la categoria o el autor
}
else if (argc == 4){
    
}
*/


*******PRÁCTICA 6.2 SIN MODIFICAR, TAL CUAL LA DEJAMOS CUANDO LA MODIFCAMOS EN EL PUNTERO 8*******


//CASE 4. buscar_Cat(books, totalBooks);
void buscar_Cat(const Book * catalogo, int totalBooks){
    char respuesta[20]; //Respuesta del usuario para buscar categoría
    int buscador_de_cat;
    printf("Introduzca la categoría (FICCIÓN, NO_FICCIÓN, POESÍA, TEATRO, ENSAYO): ");
    scanf(" %s", respuesta);

//El siguiente bloque compara la respuesta con las categorías, dependiendo del resultado, se mete en un género u otro. Si está fuera de los parámetros de género (==!0), entonces nos saca. Si está dentro, entraremos en un bucle que solo imprimirá por pantalla los libros que pertenezcan a esa categoría.
    printf("Categoría %s:\n", respuesta); 

    if (strcmp(respuesta, "FICCIÓN") == 0){ //==0 -> Es verdadero o igual respuesta y mi valor
        buscador_de_cat = FICTION; //Si la respuesta metida en el terminal por el usuario coincide, en la variable buscador_de_cat se guarda FICTION, después, en el bucle se imprime solo aquellos resultados que coincidan con FICTION.
            for (int i = 0; i < totalBooks; i++){
                if (catalogo[i].genero == buscador_de_cat){
                        printf("Libro: %d \n", i+1); //Posición del libro el el array.
                        imprimirLibro(&catalogo[i]);}}} //Impresión de datos

    else if(strcmp(respuesta, "NO_FICCIÓN") == 0){
        buscador_de_cat = NON_FICTION;
            for (int i = 0; i < totalBooks; i++){
                if (catalogo[i].genero == buscador_de_cat){
                        printf("Libro: %d \n", i+1);
                        imprimirLibro(&catalogo[i]);}}}

    else if(strcmp(respuesta, "POESÍA") == 0){
        buscador_de_cat = POETRY;
            for (int i = 0; i < totalBooks; i++){
                if (catalogo[i].genero == buscador_de_cat){
                        printf("Libro: %d \n", i+1);
                        imprimirLibro(&catalogo[i]);}}}

    else if(strcmp(respuesta, "TEATRO") == 0){
        buscador_de_cat = THEATER;
            for (int i = 0; i < totalBooks; i++){
                if (catalogo[i].genero == buscador_de_cat){
                        printf("Libro: %d \n", i+1);
                        imprimirLibro(&catalogo[i]);}}}

    else if(strcmp(respuesta, "ENSAYO") == 0){
        buscador_de_cat = ESSAY;
            for (int i = 0; i < totalBooks; i++){
                if (catalogo[i].genero == buscador_de_cat){
                        printf("Libro: %d \n", i+1);
                        imprimirLibro(&catalogo[i]);}}}

    else if(strcmp(respuesta, "FICCIÓN") || strcmp(respuesta, "NO_FICCIÓN") || strcmp(respuesta, "POESÍA") || strcmp(respuesta, "TEATRO") || strcmp(respuesta, "ENSAYO") != 0){
        printf("No existe esa categoría.\n");}

}//Fin del VOID

int main(){

//2.
    función inicializar libro:
    void inicializarLibro (){
        libro-> titulo= malloc
    }
    free();

    funcion añadir libro:
    void añadirLibro(libro*catalogo){
        catalogo=    realloc //Tenemos que hacer los scanf necesarios para insertar datos nuevos. El id podemos generarlo nosotros o obligar al usuario a que lo inserte
        printf("Inserte el nombre del libro %d", catalogo.libro(lastone+1))
        scanf("%s", nombre)
        printf("Autor: ")
        scanf("%s", autor)...
    }
    free();


    Book * catalogo = (Book*)malloc(sizeof(Book)*MAX_DE_LIBROS_PERMITIDOS));

        inicializarLibro(CATALOGO + i, 1, "To Kill a Mockingbird", "Harper Lee", 15.99, FICTION, 10); //mI FUNCION INICIALIZAR LIBRO A LA QUE LE DOY ID, TITULO, AUTOR... PERO ANTES DE NADA LE DEBO DAR UNA DIRECCIÓN DE MEMORIA DONDE GUARDAR EL LIBRO. con un for vamos repasando los libros
        inicializarLibro(2, "1984", "George Orwell", 12.49, FICTION, 5);
        inicializarLibro(3, "The Great Gatsby", "F. Scott Fitzgerald", 10.99, FICTION, 8);
        inicializarLibro(4, "Moby Dick", "Herman Melville", 18.99, FICTION, 12);
        inicializarLibro(5, "War and Peace", "Leo Tolstoy", 20.00, FICTION, 7);
        inicializarLibro(6, "Pride and Prejudice", "Jane Austen", 14.99, FICTION, 9);
        inicializarLibro(7, "The Catcher in the Rye", "J.D. Salinger", 10.00, FICTION, 6);
        inicializarLibro(8, "The Odyssey", "Homer", 17.49, FICTION, 4);
        inicializarLibro(9, "Ulysses", "James Joyce", 25.00, FICTION, 2);
        inicializarLibro(10, "The Divine Comedy", "Dante Alighieri", 22.00, POETRY, 3);
        inicializarLibro(11, "Leaves of Grass", "Walt Whitman", 13.00, POETRY, 11);
        inicializarLibro(12, "The Iliad", "Homer", 18.50, FICTION, 7);
        inicializarLibro(13, "A Brief History of Time", "Stephen Hawking", 15.00, NON_FICTION, 15);
        inicializarLibro(14, "The Art of War", "Sun Tzu", 9.99, NON_FICTION, 20);
        inicializarLibro(15, "Sapiens: A Brief History of Humankind", "Yuval Noah Harari", 16.49, NON_FICTION, 13);
        inicializarLibro(16, "The Selfish Gene", "Richard Dawkins", 14.00, NON_FICTION, 6);
        inicializarLibro(17, "The Road to Serfdom", "F.A. Hayek", 10.50, NON_FICTION, 5);
        inicializarLibro(18, "The Wealth of Nations", "Adam Smith", 30.00, NON_FICTION, 8);
        inicializarLibro(19, "On the Origin of Species", "Charles Darwin", 24.99, NON_FICTION, 4);
        inicializarLibro(20, "The Prince", "Niccolò Machiavelli", 8.99, NON_FICTION, 14);
        inicializarLibro(21, "Hamlet", "William Shakespeare", 11.50, THEATER, 6);
        inicializarLibro(22, "Macbeth", "William Shakespeare", 9.50, THEATER, 8);
        inicializarLibro(23, "Othello", "William Shakespeare", 10.99, THEATER, 7);
        inicializarLibro(24, "A Doll's House", "Henrik Ibsen", 12.50, THEATER, 5);
        inicializarLibro(25, "Waiting for Godot", "Samuel Beckett", 13.99, THEATER, 4);
        inicializarLibro(26, "Death of a Salesman", "Arthur Miller", 14.99, THEATER, 10);
        inicializarLibro(27, "The Glass Menagerie", "Tennessee Williams", 11.00, THEATER, 9);
        inicializarLibro(28, "Long Day's Journey into Night", "Eugene O'Neill", 19.50, THEATER, 3);
        inicializarLibro(29, "The Importance of Being Earnest", "Oscar Wilde", 8.50, THEATER, 15);
        inicializarLibro(30, "The Waste Land", "T.S. Eliot", 6.99, POETRY, 10);
        inicializarLibro(31, "Paradise Lost", "John Milton", 12.00, POETRY, 7);
        inicializarLibro(32, "Beowulf", "Anonymous", 15.00, POETRY, 5);
        inicializarLibro(33, "Essays", "Michel de Montaigne", 20.00, ESSAY, 4);
        inicializarLibro(34, "Self-Reliance and Other Essays", "Ralph Waldo Emerson", 9.00, ESSAY, 9);
        inicializarLibro(35, "Civil Disobedience and Other Essays", "Henry David Thoreau", 7.50, ESSAY, 11);
        inicializarLibro(36, "Meditations", "Marcus Aurelius", 11.99, ESSAY, 8);
        inicializarLibro(37, "The Federalist Papers", "Alexander Hamilton, James Madison, John Jay", 18.00, ESSAY, 5);
        inicializarLibro(38, "The Communist Manifesto", "Karl Marx and Friedrich Engels", 5.99, ESSAY, 12);
        inicializarLibro(39, "The Republic", "Plato", 16.00, ESSAY, 6);
        inicializarLibro(40, "Thus Spoke Zarathustra", "Friedrich Nietzsche", 14.99, ESSAY, 10);//inicializar libro
 

//3.
int eleccion;
printf("Determine que quiere hacer: \n"
       "\t 1. Mostrar todos los libros.\n"
       "\t 2. Buscar libro por su ID.\n"
       "\t 3. Modificar el stock de un libro.\n"
       "\t 4. Mostrar los libros según su categoría.\n"
       "\t 5. Mostrar los libros según su autor. \n"
       "\t 6. Salir del prgrama. \n"
       "Opción: ");
scanf("%d", &eleccion);

int totalBooks = 40;

switch (eleccion){
        case 1: //Mostrar todos los libros.
            imprimirTodosLosLibros (books, totalBooks);
        break;

        case 2: //Mostrar el libro que coincida con el ID o un mensaje de error.
            buscarID(books, totalBooks);
            
        break;

        case 3://Aumentar el stock del libro ID en la cantidad dada como argumento e imprimir la información pertinente.
            modificar(books, totalBooks);
        break;

        case 4://Mostrar todos los libros de la categoría dada como argumento.
            buscar_Cat(books, totalBooks);
        break;
            
        case 5://Mostrar los libros del autor dado como argumento.
          //mostrar_Autor(books, totalBooks);
        break;

        case 6:
            printf("Saliendo del programa.\n");
        break;

        default:
            printf("ERROR");
}

return 0;
}